1.What does depmod do?
depmod scans all kernel modules and builds dependency information between them.
It generates modules.dep and related files under /lib/modules/$(uname -r)/.
This allows the kernel to automatically load required modules when a device appears.
It ensures proper module dependency handling during auto-loading.




2.What must MODULE_ALIAS() match to work?
MODULE_ALIAS() must match the MODALIAS string generated by the kernel for the device.
This ensures that when the device is detected, the correct module is auto-loaded.
If it doesn't match, udev will not find or load the driver automatically.
Exact string matching is required for successful auto-loading.




3.Where does the kernel store MODALIAS info?
The kernel exposes MODALIAS strings through sysfs.
You can find them in files like /sys/bus/platform/devices/.../modalias.
This alias is used by user space tools like udev and modprobe.
It helps map devices to their corresponding drivers.




4.What is the purpose of a udev rule?
A udev rule allows custom actions when devices appear or disappear.
It can trigger modprobe to load drivers based on MODALIAS.
It can set permissions, create symlinks, or run scripts.
It automates device handling in user space.




5.How do you debug if auto-loading doesn't work?
Check dmesg logs for MODALIAS and errors.
Use modinfo to verify the module alias.
Ensure depmod has been run after building the module.
Check udev rules and reload them if needed.
Manually run modprobe with the alias to test.